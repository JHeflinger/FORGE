load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("@aspect_bazel_lib//lib:run_binary.bzl", "run_binary")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_proto_library")
# load("//:profile_transition.bzl", "cc_binary_with_profiling")

platform(
    name = "x64_windows-clang-cl",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:windows",
        "@bazel_tools//tools/cpp:clang-cl",
    ],
)

proto_library(
    name = "network_proto",
    srcs = ["network.proto"],
)

cc_proto_library(
    name = "network_cc_proto",
    deps = [":network_proto"],
)

cc_library(
    name = "ForgeLib",
    srcs = glob([
        "src/**/*.cpp",
    ]),
    hdrs = glob([
        "src/**/*.h",
    ]),
    copts = select({
        "@bazel_tools//src/conditions:windows": ["-DWINDOWS_BUILD"],
        "//conditions:default": ["-DLINUX_BUILD"],
    }),
    includes = ["src"],
    linkopts = select({
        "@bazel_tools//src/conditions:windows": ["-DEFAULTLIB:comdlg32.lib"],
        "//conditions:default": [
            "-lglfw",
            "-lvulkan",
            "-ldl",
            "-lpthread",
            "-lX11",
            "-lXxf86vm",
            "-lXrandr",
            "-lXi",
            "-lGL",
            "-lGLU",
            "-lglut",
        ],
    }),
    deps = [
        "//vendor:glad",
        "@spdlog",
        "@yaml-cpp",
        ":network_cc_proto",
		"@protobuf//:protobuf"
    ] + select({
        "@bazel_tools//src/conditions:windows": [
            "//vendor:win_glm",
            "//vendor:win_imgui",
            "//vendor:win_imgui_backend",
        ],
        "//conditions:default": [
            "//vendor:imgui",
            "//vendor:imgui_backend",
        ],
    }),
)

buildifier(
    name = "buildifier",
)

py_test(
    name = "code_audit",
    size = "small",
    srcs = ["//:help.py"],
    args = ["audit"],
    data = glob([
        "src/**/*.cpp",
    ]) + glob([
        "src/**/*.h",
    ]),
    main = "//:help.py",
    stamp = 1,
)

cc_binary(
    name = "forge",
    srcs = ["src/main.cpp"],
    data = [
        "//:assets",
        "//:imgui.ini",
        "//:settings.fconf",
    ],
    deps = [":ForgeLib"],
)

cc_binary(
    name = "forge_profile_bin",
    srcs = ["src/main.cpp"],
    copts = ["-g"],
    data = [
        "//:assets",
        "//:imgui.ini",
        "//:settings.fconf",
    ],
    linkopts = ["-g"],
    deps = [":ForgeLib"],
)

sh_binary(
    name = "profile_forge",
    srcs = ["//:scripts/callgrind_wrapper.sh"],
    args = [
        "$(location :forge_profile_bin)",
    ],
    data = [
        "//:forge_profile_bin",
    ],
)
